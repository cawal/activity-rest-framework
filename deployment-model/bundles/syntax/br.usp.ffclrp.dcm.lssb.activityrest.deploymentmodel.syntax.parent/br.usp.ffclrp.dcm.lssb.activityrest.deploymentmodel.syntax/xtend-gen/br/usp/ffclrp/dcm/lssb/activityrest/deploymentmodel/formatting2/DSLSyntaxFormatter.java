/**
 * generated by Xtext 2.18.0
 */
package br.usp.ffclrp.dcm.lssb.activityrest.deploymentmodel.formatting2;

import br.usp.ffclrp.dcm.lssb.activityrest.deploymentmodel.Contact;
import br.usp.ffclrp.dcm.lssb.activityrest.deploymentmodel.Deployment;
import br.usp.ffclrp.dcm.lssb.activityrest.deploymentmodel.Service;
import br.usp.ffclrp.dcm.lssb.activityrest.deploymentmodel.ServiceContainer;
import br.usp.ffclrp.dcm.lssb.activityrest.deploymentmodel.services.DSLSyntaxGrammarAccess;
import com.google.inject.Inject;
import java.util.Arrays;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;

@SuppressWarnings("all")
public class DSLSyntaxFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private DSLSyntaxGrammarAccess _dSLSyntaxGrammarAccess;
  
  protected void _format(final Deployment deployment, @Extension final IFormattableDocument document) {
    document.<Service>format(deployment.getService());
    document.<ServiceContainer>format(deployment.getContainer());
    document.<Contact>format(deployment.getContactInformation());
  }
  
  public void format(final Object deployment, final IFormattableDocument document) {
    if (deployment instanceof XtextResource) {
      _format((XtextResource)deployment, document);
      return;
    } else if (deployment instanceof Deployment) {
      _format((Deployment)deployment, document);
      return;
    } else if (deployment instanceof EObject) {
      _format((EObject)deployment, document);
      return;
    } else if (deployment == null) {
      _format((Void)null, document);
      return;
    } else if (deployment != null) {
      _format(deployment, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(deployment, document).toString());
    }
  }
}
