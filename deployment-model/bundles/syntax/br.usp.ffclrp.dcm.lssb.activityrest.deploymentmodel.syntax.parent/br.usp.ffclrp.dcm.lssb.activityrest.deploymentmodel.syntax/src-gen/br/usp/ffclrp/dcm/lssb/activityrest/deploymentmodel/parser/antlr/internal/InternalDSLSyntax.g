/*
 * generated by Xtext 2.18.0
 */
grammar InternalDSLSyntax;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package br.usp.ffclrp.dcm.lssb.activityrest.deploymentmodel.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package br.usp.ffclrp.dcm.lssb.activityrest.deploymentmodel.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import br.usp.ffclrp.dcm.lssb.activityrest.deploymentmodel.services.DSLSyntaxGrammarAccess;

}

@parser::members {

 	private DSLSyntaxGrammarAccess grammarAccess;

    public InternalDSLSyntaxParser(TokenStream input, DSLSyntaxGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Deployment";
   	}

   	@Override
   	protected DSLSyntaxGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleDeployment
entryRuleDeployment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeploymentRule()); }
	iv_ruleDeployment=ruleDeployment
	{ $current=$iv_ruleDeployment.current; }
	EOF;

// Rule Deployment
ruleDeployment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='deployment'
		{
			newLeafNode(otherlv_0, grammarAccess.getDeploymentAccess().getDeploymentKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getDeploymentAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='of'
		{
			newLeafNode(otherlv_2, grammarAccess.getDeploymentAccess().getOfKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDeploymentAccess().getServiceServiceParserRuleCall_3_0());
				}
				lv_service_3_0=ruleService
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeploymentRule());
					}
					set(
						$current,
						"service",
						lv_service_3_0,
						"br.usp.ffclrp.dcm.lssb.activityrest.deploymentmodel.DSLSyntax.Service");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='into'
		{
			newLeafNode(otherlv_4, grammarAccess.getDeploymentAccess().getIntoKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDeploymentAccess().getContainerServiceContainerParserRuleCall_5_0());
				}
				lv_container_5_0=ruleServiceContainer
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeploymentRule());
					}
					set(
						$current,
						"container",
						lv_container_5_0,
						"br.usp.ffclrp.dcm.lssb.activityrest.deploymentmodel.DSLSyntax.ServiceContainer");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDeploymentAccess().getContactInformationContactParserRuleCall_6_0());
				}
				lv_contactInformation_6_0=ruleContact
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeploymentRule());
					}
					set(
						$current,
						"contactInformation",
						lv_contactInformation_6_0,
						"br.usp.ffclrp.dcm.lssb.activityrest.deploymentmodel.DSLSyntax.Contact");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getDeploymentAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleServiceContainer
entryRuleServiceContainer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getServiceContainerRule()); }
	iv_ruleServiceContainer=ruleServiceContainer
	{ $current=$iv_ruleServiceContainer.current; }
	EOF;

// Rule ServiceContainer
ruleServiceContainer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='container'
		{
			newLeafNode(otherlv_0, grammarAccess.getServiceContainerAccess().getContainerKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getServiceContainerAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getServiceContainerRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"br.usp.ffclrp.dcm.lssb.activityrest.deploymentmodel.DSLSyntax.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getServiceContainerAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='base-url'
		{
			newLeafNode(otherlv_3, grammarAccess.getServiceContainerAccess().getBaseUrlKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getServiceContainerAccess().getBaseUrlURLParserRuleCall_4_0());
				}
				lv_baseUrl_4_0=ruleURL
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getServiceContainerRule());
					}
					set(
						$current,
						"baseUrl",
						lv_baseUrl_4_0,
						"br.usp.ffclrp.dcm.lssb.activityrest.deploymentmodel.DSLSyntax.URL");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='description'
			{
				newLeafNode(otherlv_5, grammarAccess.getServiceContainerAccess().getDescriptionKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getServiceContainerAccess().getDescriptionEStringParserRuleCall_5_1_0());
					}
					lv_description_6_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getServiceContainerRule());
						}
						set(
							$current,
							"description",
							lv_description_6_0,
							"br.usp.ffclrp.dcm.lssb.activityrest.deploymentmodel.DSLSyntax.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getServiceContainerAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleService
entryRuleService returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getServiceRule()); }
	iv_ruleService=ruleService
	{ $current=$iv_ruleService.current; }
	EOF;

// Rule Service
ruleService returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='service'
		{
			newLeafNode(otherlv_0, grammarAccess.getServiceAccess().getServiceKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getServiceAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getServiceRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"br.usp.ffclrp.dcm.lssb.activityrest.deploymentmodel.DSLSyntax.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getServiceAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='api-version'
		{
			newLeafNode(otherlv_3, grammarAccess.getServiceAccess().getApiVersionKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getServiceAccess().getApiVersionEStringParserRuleCall_4_0());
				}
				lv_apiVersion_4_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getServiceRule());
					}
					set(
						$current,
						"apiVersion",
						lv_apiVersion_4_0,
						"br.usp.ffclrp.dcm.lssb.activityrest.deploymentmodel.DSLSyntax.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='description'
			{
				newLeafNode(otherlv_5, grammarAccess.getServiceAccess().getDescriptionKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getServiceAccess().getDescriptionEStringParserRuleCall_5_1_0());
					}
					lv_description_6_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getServiceRule());
						}
						set(
							$current,
							"description",
							lv_description_6_0,
							"br.usp.ffclrp.dcm.lssb.activityrest.deploymentmodel.DSLSyntax.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getServiceAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleContact
entryRuleContact returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContactRule()); }
	iv_ruleContact=ruleContact
	{ $current=$iv_ruleContact.current; }
	EOF;

// Rule Contact
ruleContact returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='contact'
		{
			newLeafNode(otherlv_0, grammarAccess.getContactAccess().getContactKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getContactAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContactRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"br.usp.ffclrp.dcm.lssb.activityrest.deploymentmodel.DSLSyntax.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getContactAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='email'
		{
			newLeafNode(otherlv_3, grammarAccess.getContactAccess().getEmailKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getContactAccess().getEmailEStringParserRuleCall_4_0());
				}
				lv_email_4_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContactRule());
					}
					set(
						$current,
						"email",
						lv_email_4_0,
						"br.usp.ffclrp.dcm.lssb.activityrest.deploymentmodel.DSLSyntax.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='url'
			{
				newLeafNode(otherlv_5, grammarAccess.getContactAccess().getUrlKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getContactAccess().getUrlURLParserRuleCall_5_1_0());
					}
					lv_url_6_0=ruleURL
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getContactRule());
						}
						set(
							$current,
							"url",
							lv_url_6_0,
							"br.usp.ffclrp.dcm.lssb.activityrest.deploymentmodel.DSLSyntax.URL");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getContactAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_STRING_0=RULE_STRING
	{
		$current.merge(this_STRING_0);
	}
	{
		newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall());
	}
;

// Entry rule entryRuleURL
entryRuleURL returns [String current=null]:
	{ newCompositeNode(grammarAccess.getURLRule()); }
	iv_ruleURL=ruleURL
	{ $current=$iv_ruleURL.current.getText(); }
	EOF;

// Rule URL
ruleURL returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_STRING_0=RULE_STRING
	{
		$current.merge(this_STRING_0);
	}
	{
		newLeafNode(this_STRING_0, grammarAccess.getURLAccess().getSTRINGTerminalRuleCall());
	}
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
