// automatically generated by Xtext
grammar br.usp.ffclrp.dcm.lssb.restaurant.analysisactivitydescription.textualdsl.AnalysisActivityDSL
    with org.eclipse.xtext.common.Terminals

import "http://dcm.ffclrp.usp.br/lssb/metamodels/string-list-manipulator.ecore" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://dcm.ffclrp.usp.br/lssb/metamodels/analysis-activity-description.ecore" as analysisactivitydescription

Activity returns analysisactivitydescription::Activity:
	'Activity'
	name=EString
	'{'
		('description' description=EString)?
		('parameters' LIST_START parameters+=Parameter ( "," parameters+=Parameter)* LIST_END )?
		('inputDatasets' LIST_START inputDatasets+=InputDataset ( "," inputDatasets+=InputDataset)* LIST_END )?
		('outputDatasets' LIST_START outputDatasets+=OutputDataset ( "," outputDatasets+=OutputDataset)* LIST_END )?
		('readinessContraints' LIST_START readinessContraints+=ReadinessConstraint ( "," readinessContraints+=ReadinessConstraint)* LIST_END )?
		'tool' tool=Tool
	'}';




ReadinessConstraint returns analysisactivitydescription::ReadinessConstraint:
	MinimunDatasetCardinalityConstraint | MaximunDatasetCardinalityConstraint | MinimunParameterCardinalityConstraint | MaximunParameterCardinalityConstraint | CustomParameterConstraint | CustomDatasetConstraint;

Tool returns analysisactivitydescription::Tool:
	CommandLineTool;

Dataset returns analysisactivitydescription::Dataset:
	InputDataset | OutputDataset;

CommandLineEntryList returns analysisactivitydescription::CommandLineEntryList:
	ToolNameCommandLineEntry | LiteralCommandLineEntryList | DatasetCommandLineEntryList | ParameterCommandLineEntryList;


StringListManipulator returns StringListManipulator:
	Join | PrependEach | AppendEach | AppendListWith | PrependListWith;

EString returns ecore::EString:
	STRING | ID;

Parameter returns analysisactivitydescription::Parameter:
	'Parameter'
	name=EString
	'{'
		'minimumCardinality' minimumCardinality=EBigInteger
		'maximumCardinality' maximumCardinality=EBigInteger
		'parameterType' parameterType=ParameterType
		('defaultValues' LIST_START  defaultValue+=EString ( "," defaultValue+=EString)* LIST_START  )?
	'}';

InputDataset returns analysisactivitydescription::InputDataset:
	'Dataset'
	name=EString
	'{'
		'minimumCardinality' minimumCardinality=EBigInteger
		'maximumCardinality' maximumCardinality=EBigInteger
		('mimetype' mimetype=EString)?
	'}';

OutputDataset returns analysisactivitydescription::OutputDataset:
	'Dataset'
	name=EString
	'{'
		'minimumCardinality' minimumCardinality=EBigInteger
		'maximumCardinality' maximumCardinality=EBigInteger
		('mimetype' mimetype=EString)?
	'}';

EBigInteger returns ecore::EBigInteger:
	'-'? INT;

enum ParameterType returns analysisactivitydescription::ParameterType:
				STRING = 'STRING' | INTEGER = 'INTEGER' | REAL = 'REAL';

MinimunDatasetCardinalityConstraint returns analysisactivitydescription::MinimunDatasetCardinalityConstraint:
	'MinimunDatasetCardinalityConstraint'
	'{'
		('value' value=EBigInteger)?
		'dataset' dataset=[analysisactivitydescription::Dataset|EString]
	'}';

MaximunDatasetCardinalityConstraint returns analysisactivitydescription::MaximunDatasetCardinalityConstraint:
	'MaximunDatasetCardinalityConstraint'
	'{'
		('value' value=EBigInteger)?
		'dataset' dataset=[analysisactivitydescription::Dataset|EString]
	'}';

MinimunParameterCardinalityConstraint returns analysisactivitydescription::MinimunParameterCardinalityConstraint:
	'MinimunParameterCardinalityConstraint'
	'{'
		('value' value=EBigInteger)?
		'parameter' parameter=[analysisactivitydescription::Parameter|EString]
	'}';

MaximunParameterCardinalityConstraint returns analysisactivitydescription::MaximunParameterCardinalityConstraint:
	'MaximunParameterCardinalityConstraint'
	'{'
		('value' value=EBigInteger)?
		'parameter' parameter=[analysisactivitydescription::Parameter|EString]
	'}';

CustomParameterConstraint returns analysisactivitydescription::CustomParameterConstraint:
	'CustomParameterConstraint'
	name=EString
	'{'
		'parameter' parameter=[analysisactivitydescription::Parameter|EString]
	'}';

CustomDatasetConstraint returns analysisactivitydescription::CustomDatasetConstraint:
	'CustomDatasetConstraint'
	name=EString
	'{'
		'dataset' dataset=[analysisactivitydescription::Dataset|EString]
	'}';

CommandLineTool returns analysisactivitydescription::CommandLineTool:
	'CommandLineTool'
	name=EString
	'{'
		('executablePath' executablePath=FilePath)?
		('standardInputStream' standardInputStream=[analysisactivitydescription::InputDataset|EString])?
		('standardOutputStream' standardOutputStream=[analysisactivitydescription::OutputDataset|EString])?
		('standardErrorStream' standardErrorStream=[analysisactivitydescription::OutputDataset|EString])?
		'commandLineTemplate' LIST_START commandLineTemplate+=CommandLineEntryList ( "," commandLineTemplate+=CommandLineEntryList)* LIST_END 
		('exitCodes' LIST_START exitCodes+=ExitCode ( "," exitCodes+=ExitCode)* LIST_END )?
	'}';

FilePath returns analysisactivitydescription::FilePath:
	'FilePath' /* TODO: implement this rule and an appropriate IValueConverter */;

ExitCode returns analysisactivitydescription::ExitCode:
	'ExitCode'
	'{'
		'code' code=EBigInteger
		('reportMessage' reportMessage=EString)?
		'status' status=TerminationStatus
	'}';

ToolNameCommandLineEntry returns analysisactivitydescription::ToolNameCommandLineEntry:
	{analysisactivitydescription::ToolNameCommandLineEntry}
	'ToolNameCommandLineEntry'
	'{'
		('manipulators' LIST_START manipulators+=StringListManipulator ( "," manipulators+=StringListManipulator)* LIST_END )?
	'}';

LiteralCommandLineEntryList returns analysisactivitydescription::LiteralCommandLineEntryList:
	{analysisactivitydescription::LiteralCommandLineEntryList}
	'LiteralCommandLineEntryList'
	'{'
		('literals' LIST_START literals+=EString ( "," literals+=EString)* LIST_END )?
		('manipulators' LIST_START manipulators+=StringListManipulator ( "," manipulators+=StringListManipulator)* LIST_END )?
	'}';

DatasetCommandLineEntryList returns analysisactivitydescription::DatasetCommandLineEntryList:
	'DatasetCommandLineEntryList'
	'{'
		'dataset' dataset=[analysisactivitydescription::Dataset|EString]
		('manipulators' LIST_START manipulators+=StringListManipulator ( "," manipulators+=StringListManipulator)* LIST_END )?
	'}';

ParameterCommandLineEntryList returns analysisactivitydescription::ParameterCommandLineEntryList:
	'ParameterCommandLineEntryList'
	'{'
		'parameter' parameter=[analysisactivitydescription::Parameter|EString]
		('manipulators' LIST_START manipulators+=StringListManipulator ( "," manipulators+=StringListManipulator)* LIST_END )?
	'}';

Join returns Join:
	'Join' delimiter=EString;

PrependEach returns PrependEach:
	'PrependEach' value=EString;

AppendEach returns AppendEach:
	'AppendEach' value=EString;

AppendListWith returns AppendListWith:
	'AppendListWith' value=EString;

PrependListWith returns PrependListWith:
	'PrependListWith' value=EString;

enum TerminationStatus returns analysisactivitydescription::TerminationStatus:
				SUCCEEDED = 'SUCCEEDED' | FAILED = 'FAILED';
				
				
terminal LIST_START: '[';
terminal LIST_END: ']';
