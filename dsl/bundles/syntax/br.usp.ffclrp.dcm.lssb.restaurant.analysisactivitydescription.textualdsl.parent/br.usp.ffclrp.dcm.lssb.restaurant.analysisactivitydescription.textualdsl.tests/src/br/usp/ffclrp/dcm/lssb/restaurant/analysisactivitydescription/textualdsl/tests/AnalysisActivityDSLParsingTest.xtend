/*
 * generated by Xtext 2.14.0
 */
package br.usp.ffclrp.dcm.lssb.restaurant.analysisactivitydescription.textualdsl.tests

import br.usp.ffclrp.dcm.lssb.restaurant.analysisactivitydescription.Activity
import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.XtextRunner
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.Assert
import org.junit.Test
import org.junit.runner.RunWith

@RunWith(XtextRunner)
@InjectWith(AnalysisActivityDSLInjectorProvider)
class AnalysisActivityDSLParsingTest {
	@Inject
	ParseHelper<Activity> parseHelper
	
	@Test
	def void passingTest(){
	    
	}
	
	
	def void loadModel() {
		val result = parseHelper.parse('''Activity 'teste' {
		    description 
		    'This activity lists the directories.'
		    parameters [
		        Parameter "dir" {
		            minimumCardinality 1
		            maximumCardinality 1
		            parameterType REAL
		        }
		    ]
		    outputDatasets [
		        Dataset "list" {
		            minimumCardinality 1
		            maximumCardinality 1
		        }
		    ]
		    tool CommandLineTool 'ls' {
		        executablePath "ls/s"
		        standardOutputStream list
		        
		        commandLineTemplate [ 
		            ToolNameCommandLineEntry {},
		            LiteralCommandLineEntryList {
		                literals ["teste" , "Other String" ] } ,
		            ParameterCommandLineEntryList{
		                parameter dir
		                manipulators [
		                    PrependListWith 'first item of list'
		                ]
		            }
		        ]
		    }
		}
		''')
		Assert.assertNotNull(result)
		val errors = result.eResource.errors
		Assert.assertTrue('''Unexpected errors: «errors.join(", ")»''', errors.isEmpty)
	}
}
